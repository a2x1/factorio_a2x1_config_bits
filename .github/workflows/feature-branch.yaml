name: FeatureBranch

on:
  push:
    branches-ignore:
      - master

jobs:
  build:
    name: BUILD job

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set ENV NAME value
        run: echo ::set-env name=NAME::$(jq .name info.json -r)

      - name: Set ENV VERSION value
        run: echo ::set-env name=VERSION::$(jq .version info.json -r)

      - name: Factorio Mod luacheck
        uses: Roang-zero1/factorio-mod-luacheck@v1.1.0
        with:
          luacheckrc_url: https://raw.githubusercontent.com/Nexela/Factorio-luacheckrc/master/.luacheckrc

      # - name: Update Environment
      #   run: sudo apt-get update && sudo apt-get -y install curl zip jq

      # - name: Create Factorio Mod Archive
      #   run: make build

      # - name: Upload Factorio Mod Release
      #   run: make release
      #   env:
      #     FACTORIO_USER: ${{ secrets.FACTORIO_USER }}
      #     FACTORIO_PASSWORD: ${{ secrets.FACTORIO_PASSWORD }}

      # # - name: Upload Factorio Mod
      # #   run: make publish TAG=${{ env.TAG }}

      # # - name: Upload Factorio Mod
      # #   uses: shanemadden/factorio-mod-portal-publish@master
      # #   env:
      # #     FACTORIO_PASSWORD: ${{ secrets.FACTORIO_PASSWORD }}
      # #     FACTORIO_USER: ${{ secrets.FACTORIO_USER }}

      # # - name: Upload Factorio Mod
      # #   uses: Roang-zero1/factorio-create-release-action@master
      # #   with:
      # #     factorio_password: ${{ secrets.FACTORIO_PASSWORD }}
      # #     factorio_user: ${{ secrets.FACTORIO_USER }}

      # - name: Create Github Release Object
      #   id: actions_create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     release_name: ${{ env.VERSION }}
      #     tag_name: ${{ env.VERSION }}
      #     # body: |
      #     #   Body Placeholder

      # - name: Upload Github Release Archive
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.actions_create_release.outputs.upload_url }}
      #     asset_name: dist/a2x1_config_bits_${{ env.TAG }}.zip
      #     asset_path: dist/a2x1_config_bits_${{ env.TAG }}.zip
      #     asset_content_type: application/octet-stream
